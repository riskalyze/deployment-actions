name: Terraform action
description: Deploys or destroys AWS infrastructure using Terraform

inputs:
  environment:
    description: The environment to deploy into, i.e. "production".
    required: true
  github-ssh-key:
    description: An SSH private key with access to clone private module repos.
    required: true
  path:
    description: The path to the Terraform configuration (i.e. main.tf).
    required: false
    default: .
  region:
    description: The AWS region to deploy into.
    required: true
  role-arn:
    description: An AWS role ARN that will be assumed for Terraform operations.
    required: true
  task:
    description: The task to perform, i.e. "apply" or "destroy".
    required: true
  terraform-version:
    description: The version of Terraform to use.
    required: false
    default: 1.2.4
  workspace:
    description: The Terraform workspace to use.
    required: true

runs:
  using: "composite"
  steps:
  - uses: actions/checkout@v3
  - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
    shell: bash
  - name: Setup SOPS
    uses: mdgreenwald/mozilla-sops-action@v1.2.0
  - name: Setup Terraform
    uses: hashicorp/setup-terraform@v1
    with:
      cli_config_credentials_token: ${{ inputs.terraform-api-token }}
  - name: Assume AWS role
    uses: aws-actions/configure-aws-credentials@v1
    with:
      aws-region: ${{ inputs.region }}
      role-to-assume: ${{ inputs.role-arn }}
  - name: Download plan
    if: inputs.task == 'apply'
    uses: actions/download-artifact@v3
    with:
      name: tfplan
      path: ${{ inputs.path }}/tfplan
  - name: Terraform ${{ inputs.task }}
    id: terraform
    run: terraform.sh
    working-directory: ${{ inputs.path }}
    env:
      ENVIRONMENT: ${{ inputs.environment }}
      GIT_SSH_COMMAND: "echo '${{ inputs.github-ssh-key }}' > id_rsa
              && ssh-keyscan github.com > known_hosts
              && chmod 600 id_rsa known_hosts
              && ssh -i ./id_rsa -o UserKnownHostsFile=./known_hosts"
      REGION: ${{ inputs.region }}
      REPO: ${{ github.repository }}
      TASK: ${{ inputs.task }}
      WORKSPACE: ${{ inputs.workspace }}
    shell: bash
  - name: Upload artifact
    uses: actions/upload-artifact@v3
    if: inputs.task == 'plan'
    with:
      name: tfplan
      path: ${{ inputs.path }}/tfplan
